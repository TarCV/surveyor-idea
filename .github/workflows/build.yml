name: Build
on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [main]
  # Trigger the workflow on any pull request
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      filename: ${{ steps.artifact.outputs.filename }}
    steps:

      # Check out the current repository
      - name: Fetch Sources
        uses: actions/checkout@v4

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/actions/wrapper-validation@v4

      # Setup Java environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: zulu
          java-version: 17

      # Setup Gradle
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-home-cache-cleanup: true

      # Run tests
      - name: Run Tests
        run: ./gradlew check -x :plugin-test:test

      # Collect Tests Result of failed tests
      - name: Collect Tests Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: tests-result
          path: |
            ${{ github.workspace }}/build/reports/tests
            ${{ github.workspace }}/**/build/reports/tests

      # TODO: Upload Kover report to CodeCov
      #- name: Upload Code Coverage Report
      #  uses: codecov/codecov-action@v4
      #  with:
      #    files: ${{ github.workspace }}/build/reports/kover/report.xml
      #

      # Prepare plugin archive content for creating artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          ./gradlew buildPlugin verifyPlugin -x :plugin-test:test
          
          cd ${{ github.workspace }}/plugin/build/distributions
          FILENAME=`ls *.zip`
          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      - name: Compute sha256sum for the artifact and generated files
        run: |
          echo 'sha256sum of the artifact (please compare these sums with the sums from Garnix workflow):'
          find ./plugin/build/distributions -type f -exec sha256sum -b {} +
          find ./ci/generated -type f -exec sha256sum -b {} +

      # Store already-built plugin as an artifact for downloading
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./plugin/build/distributions/*

      - name: Collect Dependency Verification Errors
        if: ${{ failure() }}
        uses: actions/upload-artifact@v4
        with:
          name: ${{ github.job }}-dependency-verification-errors
          path: |
            ${{ github.workspace }}/build/reports/dependency-verification
            ${{ github.workspace }}/**/build/reports/dependency-verification

#  # Run Qodana inspections and provide report
#  inspectCode:
#    name: Inspect code
#    needs: build
#    runs-on: ubuntu-latest
#    permissions:
#      contents: write
#      checks: write
#      pull-requests: write
#    steps:
#      # Check out the current repository
#      - name: Fetch Sources
#        uses: actions/checkout@v4
#      # Setup Java environment for the next steps
#      - name: Setup Java
#        uses: actions/setup-java@v4
#        with:
#          distribution: zulu
#          java-version: 17
#      # Run Qodana inspections
#      - name: Qodana - Code Inspection
#        uses: JetBrains/qodana-action@v2024.1.5
#        with:
#          cache-default-branch-only: true
