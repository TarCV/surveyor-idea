name: Build
on:
  # Trigger the workflow on pushes to only the 'main' branch (this avoids duplicate checks being run e.g. for dependabot pull requests)
  push:
    branches: [main]
  # Trigger the workflow on any pull request
  pull_request:

jobs:

  # Run Gradle Wrapper Validation Action to verify the wrapper's checksum
  # Run verifyPlugin, IntelliJ Plugin Verifier, and test Gradle tasks
  # Build plugin and provide the artifact for the next workflow jobs
  build:
    name: Build
    runs-on: ubuntu-latest
    outputs:
      changelog: ${{ steps.properties.outputs.changelog }}
      version: ${{ steps.properties.outputs.version }}

      filename: ${{ steps.artifact.outputs.filename }}
    steps:

      # Check out current repository
      - name: Fetch Sources
        uses: actions/checkout@v3

      # Validate wrapper
      - name: Gradle Wrapper Validation
        uses: gradle/wrapper-validation-action@v1.0.6

      # Setup Java 11 environment for the next steps
      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: zulu
          java-version: 11
      - name: Setup Gradle
        uses: gradle/gradle-build-action@v2

      # Set environment variables
      - name: Export Properties
        id: properties
        shell: bash
        run: |
          PROPERTIES="$(./gradlew properties --console=plain -q)"
          VERSION="$(echo "$PROPERTIES" | grep "^version:" | cut -f2- -d ' ')"
          NAME="$(echo "$PROPERTIES" | grep "^pluginName:" | cut -f2- -d ' ')"
          CHANGELOG="$(./gradlew getChangelog --unreleased --no-header --console=plain -q)"

          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "name=$NAME" >> $GITHUB_OUTPUT
          
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
      # Run tests
      # TODO: Run tests against latest EAPs of supported IDEs (with cron)
      - name: Build & Run Tests
        run: ./gradlew check

      # Collect Tests Result of failed tests
      - name: Collect Tests Result
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: tests-result
          path: |
            ${{ github.workspace }}/build/reports/tests
            ${{ github.workspace }}/**/build/reports/tests

      # TODO: Upload Kover report to CodeCov
      #- name: Upload Code Coverage Report
      #  uses: codecov/codecov-action@v3
      #  with:
      #    directory: ${{ github.workspace }}
      #
      # TODO: Run Qodana inspections
      #- name: Qodana - Code Inspection
      #  uses: JetBrains/qodana-action@v2023.1.0

      # Prepare plugin archive content for creating artifact
      - name: Prepare Plugin Artifact
        id: artifact
        shell: bash
        run: |
          ./gradlew buildPlugin verifyPlugin
          
          cd ${{ github.workspace }}/plugin/build/distributions
          FILENAME=`ls *.zip`
          echo "filename=${FILENAME:0:-4}" >> $GITHUB_OUTPUT

      # Store already-built plugin as an artifact for downloading
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.artifact.outputs.filename }}
          path: ./plugin/build/distributions/*

      - name: Collect Dependency Verification Errors
        if: ${{ failure() }}
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.job }}-dependency-verification-errors
          path: |
            ${{ github.workspace }}/build/reports/dependency-verification
            ${{ github.workspace }}/**/build/reports/dependency-verification

